##################COMENTARIOS#################################
## keywords
## name			-> nos dice el nombre del directorio
## propagation	-> calcula la evolución temporal
## geninwf		-> genera la función de onda inicial
## ojo! solo debe estar activa propagation o geninwf (no ambas)
## time-not-fs	-> se desactivan las unidades en los tiempos (se usan unidades atómicas)
############################################################## 
RUN-SECTION
	name=result_folder
	propagation
	#geninwf
	time-not-fs
  
#############################################################
##############Paralellization################################
usepthreads = 4, summf2,no-funkphi
ptiming		# Check ptiming file to control overload, and include
			# no-* keywords accordingly to suppress inefficiently 
			# parallelized routines.
#############################################################
#############################################################

##################COMENTARIOS#################################
## tfinal	-> tiempo final
## tout		-> tiempo en el cual va guardando los datos
## tpsi		-> lapso de tiempo en el que se va guardando la función de onda
############################################################## 
	tfinal = 5 tout = 0.1 tpsi = 0.1
	steps
	gridpop # para showd1d
	pdensity # particle density file. Useful to compute quantities after run.
	veigen
	psi
	auto
	#energy-not-ev
end-run-section

OPERATOR-SECTION
	opname=operator_file
end-operator-section

##################COMENTARIOS#################################
## single particle function (SPF) basis section
## Nomenclatura -> GDL = cantidad-de-elementos
## ojo! cuando tenemos 2 GDL X1 y X2 deben ser iguales
## en este caso usamos Sine-DVR
############################################################## 
SBASIS-SECTION
	X1	=	10
	X2	=	id,1
end-sbasis-section

##################COMENTARIOS#################################
## primitive basis section
## aca decimos como se describen cada una de las SPFs
## Nomenclatura -> GDL sin N -L L short/long
## 	GDL -> grado de libertad o coordenada
## 	sin -> keyword que permite hacer una aproximación sine-DVR
## 	N -> cantidad de puntos a utilizar
## 	[-L,L] -> ancho de la caja Sine-DVR
## 	short/long nos dice si los pts extremos estan incluidos o no en la grilla
#############################################################
PBASIS-SECTION
	X1	sin	501	-25.0	25.0	short
	X2	sin	501	-25.0	25.0	short
end-pbasis-section

INTEGRATOR-SECTION
	CMF/var	=	0.1	,	1d-6 # Initial step size, accuracy.
	BS/spf	=	9	,	1d-7 # Order, accuracy, initial step.
	SIL/A	=	10	,	1d-6 # Order, accuracy.
end-integrator-section

##################COMENTARIOS#################################
## Init Wave Function Section (consultar página de MCTDH)
## acá le decimos el estado inicial (con qué va a empezar la evolución)
## nomenclatura	-> GDL keyword x0 p0 deltaX
## 	x0			-> dónde está centrada la gaussiana
## 	p0			-> momento inicial de la gaussiana
## 	deltaX		-> dispersión (ancho) de la gaussiana
#############################################################
INIT_WF-SECTION
	build
		X1 eigenf hzero pop=1
		X2 eigenf h1 pop=1		# el DOF X2 comienza en un autoestado de h1(x)
	end-build
end-init_wf-section

end-input

## run: rm -Rf result_folder/ && mctdh86 -mnd -w -p gamma 0.1 input_file.inp
## plot: cd result_folder/ && showd1d86 -a f2
